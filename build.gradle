buildscript {
	ext {
		restdocsApiSpecVersion = '0.18.2'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.11'
	id 'io.spring.dependency-management' version '1.1.4'

	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
	id 'org.hidetake.swagger.generator' version '2.18.2'
}


swaggerSources {
	sample {
		setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
	}
}

// openapi3 스펙 생성 시 설정 정보
openapi3 {
	servers = [
			{ url = "http://15.165.248.213" },
			{ url = "http://localhost:8080" }
	]
	title = "모티부 API 명세서"
	description = "Motivoo REST Docs with SwaggerUI"
	version = "v0.0.1"
	format = "yaml"
}

group = 'sopt.org'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}

dependencies {


	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// H2 (테스트용)
	runtimeOnly 'com.h2database:h2'
	testImplementation 'com.h2database:h2'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring Validatior
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.hibernate.validator', name: 'hibernate-validator'

	// Spring Scheduler Test
	testImplementation 'org.awaitility:awaitility:4.2.0'

	// Slack Webhook
	implementation 'com.slack.api:slack-api-client:1.30.0'
	implementation 'com.google.code.gson:gson:2.10.1'

	// Swagger+RestDocs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'io.rest-assured:rest-assured'
//	swaggerUI 'org.webjars:swagger-ui:4.11.1'

	// AWS sdk
	implementation("software.amazon.awssdk:bom:2.21.0")
	implementation("software.amazon.awssdk:s3:2.21.0")

	//OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.7'

	// Firebase
	implementation "com.google.firebase:firebase-admin:9.1.1"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(GenerateSwaggerUI) {
	dependsOn 'openapi3'
	doFirst {
		def swaggerUIFile = file("${openapi3.outputDirectory}/api-spec/openapi3.yaml")
		def securitySchemesContent =  "  securitySchemes:\n" +  \
                                      "    APIKey:\n" +  \
                                      "      type: apiKey\n" +  \
                                      "      name: Authorization\n" +  \
                                      "      in: header\n" + \
                                      "security:\n" +
				"  - APIKey: []  # Apply the security scheme here"
//		def existingContent = swaggerUIFile.text
//		def updatedContent = existingContent + securitySchemesContent
//		swaggerUIFile.write(updatedContent)
		swaggerUIFile.append securitySchemesContent
	}

	// local 확인용으로 json 정적파일 복사
//	delete file('src/main/resources/static/docs')
//	copy {
//		from "build/resources/main/static/docs"
//		into "src/main/resources/static/docs/"
//	}
}

// openAPI 작성 자동화 => 패키징 전에 openapi3 태스크를 먼저 실행하도록 유발
bootJar {
//	dependsOn(':openapi3')
	dependsOn generateSwaggerUISample
	from("${generateSwaggerUISample.outputDir}") {
		into 'static/docs'
	}
	copy {
		from "build/resources/main/static/docs"
		into "src/main/resources/static/docs/"
	}
}



openapi3 {
	servers = [
			{ url = "http://15.165.248.213" },
			{ url = "http://localhost:8080" }
	]
	title = "모티부 API 명세서"
	description = "Motivoo REST Docs with SwaggerUI"
	version = "v0.0.1"
	format = "json"
	outputFileNamePrefix = "open-api-3.0.1"
	outputDirectory = 'build/resources/main/static/docs'
}