spring:
  datasource:
    driver-clas-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DATABASE_ENDPOINT_URL}:3306/${DATABASE_NAME}?serverTimezone=UTC&characterEncoding=UTF-8
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}

  config:
    activate:
      on-profile: dev

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${kakao.client.id}
            redirect-uri: http://localhost:8080/kakao/callback
            client-authentication-method: POST
            client-secret: ${kakao.client.secret}
            authorization-grant-type: authorization_code
            scope:
              - sub
              - nickname
            client_name: kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v1/oidc/userinfo
            user-name-attribute: id
data:
  redis:
    host: localhost # 로컬에서 테스트 할 때는 localhost로 사용
    port: 6379

jwt:
  token:
    secret-key: Q4NSl604sgyHJj1qwEkR3ycUeR4uUAt7WJraD7EN3O9DVM4yyYuHxMEbSF4XXyYJkal13eqgB0F7Bq4H
  access-token:
    expire-length: 1800000
  refresh-token:
    expire-length: 1209600000

  servlet:
    multipart:
      enabled: true
      max-file-size: 3MB
      max-request-size: 5MB

aws-property:
  access-key: ${AWS_ACCESS_KEY}
  secret-key: ${AWS_SECRET_KEY}
  aws-region: ${AWS_REGION}
  s3-bucket-name: ${S3_BUCKET_NAME}


slack:
  webhook:
    url: ${SLACK_WEBHOOK_URL}